// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	amqp "github.com/streadway/amqp"

	mock "github.com/stretchr/testify/mock"
)

// IConnection is an autogenerated mock type for the IConnection type
type IConnection struct {
	mock.Mock
}

// Channel provides a mock function with given fields:
func (_m *IConnection) Channel() (*amqp.Channel, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Channel")
	}

	var r0 *amqp.Channel
	var r1 error
	if rf, ok := ret.Get(0).(func() (*amqp.Channel, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *amqp.Channel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*amqp.Channel)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Close provides a mock function with given fields:
func (_m *IConnection) Close() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIConnection creates a new instance of IConnection. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIConnection(t interface {
	mock.TestingT
	Cleanup(func())
}) *IConnection {
	mock := &IConnection{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
