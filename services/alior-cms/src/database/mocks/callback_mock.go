// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/database/callback.go

// Package database_test is a generated GoMock package.
package database_test

import (
	database "callback_service/src/database"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockICallback is a mock of ICallback interface.
type MockICallback struct {
	ctrl     *gomock.Controller
	recorder *MockICallbackMockRecorder
}

// MockICallbackMockRecorder is the mock recorder for MockICallback.
type MockICallbackMockRecorder struct {
	mock *MockICallback
}

// NewMockICallback creates a new mock instance.
func NewMockICallback(ctrl *gomock.Controller) *MockICallback {
	mock := &MockICallback{ctrl: ctrl}
	mock.recorder = &MockICallbackMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICallback) EXPECT() *MockICallbackMockRecorder {
	return m.recorder
}

// CreateCallback mocks base method.
func (m *MockICallback) CreateCallback(ctx context.Context, data *database.Callback) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCallback", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateCallback indicates an expected call of CreateCallback.
func (mr *MockICallbackMockRecorder) CreateCallback(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCallback", reflect.TypeOf((*MockICallback)(nil).CreateCallback), ctx, data)
}

// GetCallback mocks base method.
func (m *MockICallback) GetCallback(ctx context.Context, limit, offset int) (*database.Callback, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCallback", ctx, limit, offset)
	ret0, _ := ret[0].(*database.Callback)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCallback indicates an expected call of GetCallback.
func (mr *MockICallbackMockRecorder) GetCallback(ctx, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCallback", reflect.TypeOf((*MockICallback)(nil).GetCallback), ctx, limit, offset)
}

// GetTotalCallbacks mocks base method.
func (m *MockICallback) GetTotalCallbacks(ctx context.Context) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalCallbacks", ctx)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalCallbacks indicates an expected call of GetTotalCallbacks.
func (mr *MockICallbackMockRecorder) GetTotalCallbacks(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalCallbacks", reflect.TypeOf((*MockICallback)(nil).GetTotalCallbacks), ctx)
}
