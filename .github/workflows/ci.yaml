name: CI Pipeline for Main Branch

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  bulid-front:
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка зависимостей
        run: npm ci
        working-directory: ./services/frontend

      - name: Сборка проекта
        run: npm run build
        working-directory: ./services/frontend

      - run: |
          pwd
          ls
          cd services/frontend/production
          ls -la 

      - name: Архивирование артефакта
        shell: sh
        if: runner.os == 'Linux'
        run: |
          echo ::group::Архивирование артефакта
          tar \
            --dereference --hard-dereference \
            --directory services/frontend/production \
            -cvf "artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            .
          echo ::endgroup::

      - name: Загрузка артефакта
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: artifact.tar
          retention-days: 1
          if-no-files-found: error

  build-alior-cms:
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4
      - name: Установка Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'
      - name: Проверка версии Go
        run: go version
      - name: Установка кэша зависимостей
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Установка зависимостей
        run: go mod tidy
        working-directory: ./services/alior-cms
      - name: Сборка проекта
        run: go build -o /dev/null ./...
        working-directory: ./services/alior-cms

  build-alior-sms:
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4
      - name: Установка Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'
      - name: Проверка версии Go
        run: go version
      - name: Установка кэша зависимостей
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Установка зависимостей
        run: go mod tidy
        working-directory: ./services/alior-sms
      - name: Сборка проекта
        run: go build -o /dev/null ./...
        working-directory: ./services/alior-sms

  build-alior-auth:
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4
      - name: Установка Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'
      - name: Проверка версии Go
        run: go version
      - name: Установка кэша зависимостей
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Установка зависимостей
        run: go mod tidy
        working-directory: ./services/alior-auth
      - name: Сборка проекта
        run: go build -o /dev/null ./...
        working-directory: ./services/alior-auth

  build-alior-api-gw:
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4
      - name: Установка Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'
      - name: Проверка версии Go
        run: go version
      - name: Установка кэша зависимостей
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Установка зависимостей
        run: go mod tidy
        working-directory: ./services/alior-api-gw
      - name: Сборка проекта
        run: go build -o /dev/null ./...
        working-directory: ./services/alior-api-gw

  check-tests-alior-cms:
    defaults:
      run:
        working-directory: ./services/alior-cms
    needs:
      - build-alior-cms
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.4

      - name: Проверка зависимостей
        run: go mod verify

      - name: Сборка
        run: go build -v ./...

      - name: Запуск go vet
        run: go vet ./...

      - name: Установка staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Запуск staticcheck
        run: staticcheck ./...

      - name: Установка golint
        run: go install golang.org/x/lint/golint@latest

      - name: Запуск golint
        run: golint ./...

      - name: Запуск тестов
        run: go test -race -vet=off ./...

  check-tests-alior-sms:
    defaults:
      run:
        working-directory: ./services/alior-sms
    needs:
      - build-alior-sms
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.4

      - name: Проверка зависимостей
        run: go mod verify

      - name: Сборка
        run: go build -v ./...

      - name: Запуск go vet
        run: go vet ./...

      - name: Установка staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Запуск staticcheck
        run: staticcheck ./...

      - name: Установка golint
        run: go install golang.org/x/lint/golint@latest

      - name: Запуск golint
        run: golint ./...

      - name: Запуск тестов
        run: go test -race -vet=off ./...

  check-tests-alior-auth:
    defaults:
      run:
        working-directory: ./services/alior-auth
    needs:
      - build-alior-auth
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.4

      - name: Проверка зависимостей
        run: go mod verify

      - name: Сборка
        run: go build -v ./...

      - name: Запуск go vet
        run: go vet ./...

      - name: Установка staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Запуск staticcheck
        run: staticcheck ./...

      - name: Установка golint
        run: go install golang.org/x/lint/golint@latest

      - name: Запуск golint
        run: golint ./...

      - name: Запуск тестов
        run: go test -race -vet=off ./...

  check-tests-alior-api-gw:
    defaults:
      run:
        working-directory: ./services/alior-api-gw
    needs: build-alior-api-gw
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.4

      - name: Проверка зависимостей
        run: go mod verify

      - name: Сборка
        run: go build -v ./...

      - name: Запуск go vet
        run: go vet ./...

      - name: Установка staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Запуск staticcheck
        run: staticcheck ./...

      - name: Установка golint
        run: go install golang.org/x/lint/golint@latest

      - name: Запуск golint
        run: golint ./...

      - name: Запуск тестов
        run: go test -race -vet=off ./...

  deploy-front:
    needs: bulid-front

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: https://egorko25.github.io/alior

    runs-on: ubuntu-latest
    steps:
      - name: Деплой на GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  start-qa-test:
    needs:
      - check-tests-alior-api-gw
      - check-tests-alior-auth
      - check-tests-alior-sms
      - check-tests-alior-cms
      - deploy-front
    runs-on: ubuntu-latest
    steps:
      - name: Здесь должны быть твои тесты Кирилл
        run: echo "Добавь запуск своих тестов сюда"
